import { Injectable } from '@angular/core';
import { from } from 'rxjs';
import { mergeMap, groupBy, reduce } from 'rxjs/operators';
import * as i0 from "@angular/core";
class GroupRowsService {
    static doGroupRows(data, groupRowsBy) {
        const grouped = [];
        from(data)
            .pipe(groupBy((row) => row[groupRowsBy]), mergeMap((group) => group.pipe(reduce((acc, curr) => [...acc, curr], []))))
            .subscribe((row) => grouped.push(row));
        return grouped;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: GroupRowsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: GroupRowsService }); }
}
export { GroupRowsService };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: GroupRowsService, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtcm93cy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWVhc3ktdGFibGUvc3JjL2xpYi9zZXJ2aWNlcy9ncm91cC1yb3dzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzVCLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUUzRCxNQUNhLGdCQUFnQjtJQUNwQixNQUFNLENBQUMsV0FBVyxDQUFJLElBQVMsRUFBRSxXQUFtQjtRQUN6RCxNQUFNLE9BQU8sR0FBVSxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQzthQUNQLElBQUksQ0FDSCxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUNsQyxRQUFRLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBUSxFQUFFLElBQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQ25GO2FBQ0EsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFekMsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQzs4R0FYVSxnQkFBZ0I7a0hBQWhCLGdCQUFnQjs7U0FBaEIsZ0JBQWdCOzJGQUFoQixnQkFBZ0I7a0JBRDVCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBmcm9tIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtZXJnZU1hcCwgZ3JvdXBCeSwgcmVkdWNlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgR3JvdXBSb3dzU2VydmljZSB7XG4gIHB1YmxpYyBzdGF0aWMgZG9Hcm91cFJvd3M8VD4oZGF0YTogVFtdLCBncm91cFJvd3NCeTogc3RyaW5nKTogYW55W10ge1xuICAgIGNvbnN0IGdyb3VwZWQ6IGFueVtdID0gW107XG4gICAgZnJvbShkYXRhKVxuICAgICAgLnBpcGUoXG4gICAgICAgIGdyb3VwQnkoKHJvdykgPT4gcm93W2dyb3VwUm93c0J5XSksXG4gICAgICAgIG1lcmdlTWFwKChncm91cCkgPT4gZ3JvdXAucGlwZShyZWR1Y2UoKGFjYzogVFtdLCBjdXJyOiBUKSA9PiBbLi4uYWNjLCBjdXJyXSwgW10pKSlcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoKHJvdykgPT4gZ3JvdXBlZC5wdXNoKHJvdykpO1xuXG4gICAgcmV0dXJuIGdyb3VwZWQ7XG4gIH1cbn1cbiJdfQ==