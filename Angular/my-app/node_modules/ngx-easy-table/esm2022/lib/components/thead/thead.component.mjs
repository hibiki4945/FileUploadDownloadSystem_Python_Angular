import { ChangeDetectionStrategy, Component, EventEmitter, HostListener, Input, Output, ViewChild, ViewChildren, } from '@angular/core';
import { Event } from '../..';
import { StyleService } from '../../services/style.service';
import { moveItemInArray } from '@angular/cdk/drag-drop';
import * as i0 from "@angular/core";
import * as i1 from "../../services/style.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/cdk/drag-drop";
import * as i4 from "../header/header.component";
class TableTHeadComponent {
    onClick(targetElement) {
        if (this.additionalActionMenu &&
            !this.additionalActionMenu.nativeElement.contains(targetElement)) {
            this.menuActive = false;
        }
        // if click outside the header then close opened Header Action Template
        if (this.openedHeaderActionTemplate &&
            // if no header have the clicked point
            !this.headerDropdown.toArray().some((ref) => ref.nativeElement.contains(targetElement))) {
            this.openedHeaderActionTemplate = null;
        }
    }
    constructor(styleService) {
        this.styleService = styleService;
        this.menuActive = false;
        this.openedHeaderActionTemplate = null;
        this.onSelectAllBinded = this.onSelectAll.bind(this);
        this.filter = new EventEmitter();
        this.order = new EventEmitter();
        this.selectAll = new EventEmitter();
        this.event = new EventEmitter();
    }
    getColumnDefinition(column) {
        return column.searchEnabled || typeof column.searchEnabled === 'undefined';
    }
    orderBy(column) {
        this.order.emit(column);
    }
    isOrderEnabled(column) {
        const columnOrderEnabled = column.orderEnabled === undefined ? true : !!column.orderEnabled;
        return this.config.orderEnabled && columnOrderEnabled;
    }
    columnDrop(event) {
        moveItemInArray(this.columns, event.previousIndex, event.currentIndex);
    }
    onSearch($event) {
        this.filter.emit($event);
    }
    getColumnWidth(column) {
        if (column.width) {
            return column.width;
        }
        return this.config.fixedColumnWidth ? 100 / this.columns.length + '%' : null;
    }
    onSelectAll() {
        this.selectAll.emit();
    }
    onMouseDown(event, th) {
        if (!this.config.resizeColumn) {
            return;
        }
        this.th = th;
        this.startOffset = th.offsetWidth - event.pageX;
        this.event.emit({
            event: Event.onColumnResizeMouseDown,
            value: event,
        });
    }
    onMouseMove(event) {
        if (!this.config.resizeColumn) {
            return;
        }
        if (this.th && this.th.style) {
            this.th.style.width = this.startOffset + event.pageX + 'px';
            this.th.style.cursor = 'col-resize';
            this.th.style['user-select'] = 'none';
        }
    }
    onMouseUp(event) {
        if (!this.config.resizeColumn) {
            return;
        }
        this.event.emit({
            event: Event.onColumnResizeMouseUp,
            value: event,
        });
        this.th.style.cursor = 'default';
        this.th = undefined;
    }
    showHeaderActionTemplateMenu(column) {
        if (!column.headerActionTemplate) {
            console.error('Column [headerActionTemplate] property not defined');
        }
        if (this.openedHeaderActionTemplate === column.key) {
            this.openedHeaderActionTemplate = null;
            return;
        }
        this.openedHeaderActionTemplate = column.key;
    }
    showMenu() {
        if (!this.additionalActionsTemplate) {
            console.error('[additionalActionsTemplate] property not defined');
        }
        this.menuActive = !this.menuActive;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: TableTHeadComponent, deps: [{ token: i1.StyleService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.4", type: TableTHeadComponent, selector: "[table-thead]", inputs: { config: "config", columns: "columns", sortKey: "sortKey", sortState: "sortState", selectAllTemplate: "selectAllTemplate", filtersTemplate: "filtersTemplate", additionalActionsTemplate: "additionalActionsTemplate" }, outputs: { filter: "filter", order: "order", selectAll: "selectAll", event: "event" }, host: { listeners: { "document:click": "onClick($event.target)" } }, providers: [StyleService], viewQueries: [{ propertyName: "th", first: true, predicate: ["th"], descendants: true }, { propertyName: "additionalActionMenu", first: true, predicate: ["additionalActionMenu"], descendants: true }, { propertyName: "headerDropdown", predicate: ["headerDropdown"], descendants: true }], ngImport: i0, template: "<tr class=\"ngx-table__header\" *ngIf=\"config.headerEnabled && !config.columnReorder\">\n  <th *ngIf=\"config.checkboxes || config.radio\" [style.width]=\"'3%'\">\n    <ng-container\n      *ngIf=\"selectAllTemplate && config.checkboxes\"\n      [ngTemplateOutlet]=\"selectAllTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: onSelectAllBinded }\"\n    >\n    </ng-container>\n    <label\n      class=\"ngx-form-checkbox\"\n      for=\"selectAllCheckboxes\"\n      *ngIf=\"!selectAllTemplate && config.checkboxes\"\n    >\n      <input type=\"checkbox\" id=\"selectAllCheckboxes\" (change)=\"onSelectAll()\" />\n      <em class=\"ngx-form-icon\" id=\"selectAllCheckbox\"></em>\n    </label>\n  </th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index; let last = last\">\n    <th\n      class=\"ngx-table__header-cell\"\n      [class.pinned-left]=\"column.pinned\"\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n      #th\n      [style.width]=\"getColumnWidth(column)\"\n      (mousedown)=\"onMouseDown($event, th)\"\n      (mouseup)=\"onMouseUp($event)\"\n      (mousemove)=\"onMouseMove($event)\"\n    >\n      <div\n        (click)=\"orderBy(column)\"\n        style=\"display: inline\"\n        [class.pointer]=\"isOrderEnabled(column)\"\n      >\n        <div class=\"ngx-table__header-title\">\n          {{ column.title }}<span>&nbsp;</span>\n          <em class=\"ngx-icon ngx-icon-pin\" *ngIf=\"column.pinned\"></em>\n          <div [style.display]=\"config.orderEnabled ? 'inline' : 'none'\">\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\"\n              class=\"ngx-icon ngx-icon-arrow-up\"\n            >\n            </em>\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\"\n              class=\"ngx-icon ngx-icon-arrow-down\"\n            >\n            </em>\n          </div>\n        </div>\n      </div>\n      <div class=\"ngx-dropdown\" *ngIf=\"!!column.headerActionTemplate\" #headerDropdown>\n        <a class=\"ngx-btn ngx-btn-link\" (click)=\"showHeaderActionTemplateMenu(column)\">\n          <span class=\"ngx-icon ngx-icon-more\"></span>\n        </a>\n        <div\n          class=\"ngx-menu ngx-table__table-menu\"\n          *ngIf=\"column.key === openedHeaderActionTemplate\"\n        >\n          <ng-container [ngTemplateOutlet]=\"column.headerActionTemplate\"> </ng-container>\n        </div>\n      </div>\n      <div class=\"ngx-table__column-resizer\" *ngIf=\"config.resizeColumn && !last\"></div>\n    </th>\n  </ng-container>\n  <th\n    *ngIf=\"\n      config.additionalActions ||\n      config.detailsTemplate ||\n      config.collapseAllRows ||\n      config.groupRows\n    \"\n    class=\"ngx-table__header-cell-additional-actions\"\n  >\n    <div class=\"ngx-dropdown\" #additionalActionMenu *ngIf=\"config.additionalActions\">\n      <a class=\"ngx-btn ngx-btn-link\" (click)=\"showMenu()\">\n        <span class=\"ngx-icon ngx-icon-menu\"></span>\n      </a>\n      <ul class=\"ngx-menu ngx-table__table-menu\" *ngIf=\"menuActive\">\n        <ng-container\n          *ngIf=\"additionalActionsTemplate\"\n          [ngTemplateOutlet]=\"additionalActionsTemplate\"\n        >\n        </ng-container>\n      </ul>\n    </div>\n  </th>\n</tr>\n<tr\n  class=\"ngx-table__header ngx-table__header--draggable\"\n  *ngIf=\"config.headerEnabled && config.columnReorder\"\n  cdkDropList\n  cdkDropListOrientation=\"horizontal\"\n  (cdkDropListDropped)=\"columnDrop($event)\"\n>\n  <th *ngIf=\"config.checkboxes || config.radio\" [style.width]=\"'3%'\">\n    <ng-container\n      *ngIf=\"selectAllTemplate && config.checkboxes\"\n      [ngTemplateOutlet]=\"selectAllTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: onSelectAllBinded }\"\n    >\n    </ng-container>\n    <label\n      class=\"ngx-form-checkbox\"\n      for=\"selectAllCheckboxes\"\n      *ngIf=\"!selectAllTemplate && config.checkboxes\"\n    >\n      <input type=\"checkbox\" id=\"selectAllCheckboxesDrag\" (change)=\"onSelectAll()\" />\n      <em class=\"ngx-form-icon\" id=\"selectAllCheckboxDrag\"></em>\n    </label>\n  </th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index; let last = last\">\n    <th\n      class=\"ngx-table__header-cell ngx-table__header-cell--draggable\"\n      cdkDragLockAxis=\"x\"\n      cdkDrag\n      [cdkDragStartDelay]=\"config.reorderDelay || 0\"\n      [class.pinned-left]=\"column.pinned\"\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n      #th\n      [style.width]=\"getColumnWidth(column)\"\n      (mousedown)=\"onMouseDown($event, th)\"\n      (mouseup)=\"onMouseUp($event)\"\n      (mousemove)=\"onMouseMove($event)\"\n    >\n      <div\n        (click)=\"orderBy(column)\"\n        style=\"display: inline\"\n        cdkDragHandle\n        [class.pointer]=\"isOrderEnabled(column)\"\n      >\n        <div class=\"ngx-table__header-title\">\n          {{ column.title }}<span>&nbsp;</span>\n          <em class=\"ngx-icon ngx-icon-pin\" *ngIf=\"column.pinned\"></em>\n          <div [style.display]=\"config.orderEnabled ? 'inline' : 'none'\">\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\"\n              class=\"ngx-icon ngx-icon-arrow-up\"\n            >\n            </em>\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\"\n              class=\"ngx-icon ngx-icon-arrow-down\"\n            >\n            </em>\n          </div>\n        </div>\n      </div>\n      <div class=\"ngx-dropdown\" *ngIf=\"!!column.headerActionTemplate\" #headerDropdown>\n        <a class=\"ngx-btn ngx-btn-link\" (click)=\"showHeaderActionTemplateMenu(column)\">\n          <span class=\"ngx-icon ngx-icon-more\"></span>\n        </a>\n        <div\n          class=\"ngx-menu ngx-table__table-menu\"\n          *ngIf=\"column.key === openedHeaderActionTemplate\"\n        >\n          <ng-container [ngTemplateOutlet]=\"column.headerActionTemplate\"> </ng-container>\n        </div>\n      </div>\n      <div class=\"ngx-table__column-resizer\" *ngIf=\"config.resizeColumn && !last\"></div>\n    </th>\n  </ng-container>\n  <th\n    *ngIf=\"\n      config.additionalActions ||\n      config.detailsTemplate ||\n      config.collapseAllRows ||\n      config.groupRows\n    \"\n    class=\"ngx-table__header-cell-additional-actions\"\n  >\n    <div class=\"ngx-dropdown\" #additionalActionMenu *ngIf=\"config.additionalActions\">\n      <a class=\"ngx-btn ngx-btn-link\" (click)=\"showMenu()\">\n        <span class=\"ngx-icon ngx-icon-menu\"></span>\n      </a>\n      <ul class=\"ngx-menu ngx-table__table-menu\" *ngIf=\"menuActive\">\n        <ng-container\n          *ngIf=\"additionalActionsTemplate\"\n          [ngTemplateOutlet]=\"additionalActionsTemplate\"\n        >\n        </ng-container>\n      </ul>\n    </div>\n  </th>\n</tr>\n<tr\n  [style.display]=\"config.searchEnabled && !filtersTemplate ? 'table-row' : 'none'\"\n  class=\"ngx-table__search-header\"\n>\n  <th *ngIf=\"config.checkboxes || config.radio\"></th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n    <th\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [class.pinned-left]=\"column.pinned\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n    >\n      <table-header\n        *ngIf=\"getColumnDefinition(column)\"\n        (update)=\"onSearch($event)\"\n        [column]=\"column\"\n      >\n      </table-header>\n    </th>\n  </ng-container>\n  <th *ngIf=\"config.additionalActions || config.detailsTemplate\"></th>\n</tr>\n<ng-container *ngIf=\"filtersTemplate\">\n  <tr>\n    <ng-container [ngTemplateOutlet]=\"filtersTemplate\"> </ng-container>\n  </tr>\n</ng-container>\n", styles: [".cdk-drag-preview{text-align:left;padding-top:9px;padding-left:4px;color:#50596c;border:1px solid #e7e9ed}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i3.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i3.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }, { kind: "directive", type: i3.CdkDragHandle, selector: "[cdkDragHandle]", inputs: ["cdkDragHandleDisabled"] }, { kind: "component", type: i4.HeaderComponent, selector: "table-header", inputs: ["column"], outputs: ["update"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TableTHeadComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.4", ngImport: i0, type: TableTHeadComponent, decorators: [{
            type: Component,
            args: [{ selector: '[table-thead]', changeDetection: ChangeDetectionStrategy.OnPush, providers: [StyleService], template: "<tr class=\"ngx-table__header\" *ngIf=\"config.headerEnabled && !config.columnReorder\">\n  <th *ngIf=\"config.checkboxes || config.radio\" [style.width]=\"'3%'\">\n    <ng-container\n      *ngIf=\"selectAllTemplate && config.checkboxes\"\n      [ngTemplateOutlet]=\"selectAllTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: onSelectAllBinded }\"\n    >\n    </ng-container>\n    <label\n      class=\"ngx-form-checkbox\"\n      for=\"selectAllCheckboxes\"\n      *ngIf=\"!selectAllTemplate && config.checkboxes\"\n    >\n      <input type=\"checkbox\" id=\"selectAllCheckboxes\" (change)=\"onSelectAll()\" />\n      <em class=\"ngx-form-icon\" id=\"selectAllCheckbox\"></em>\n    </label>\n  </th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index; let last = last\">\n    <th\n      class=\"ngx-table__header-cell\"\n      [class.pinned-left]=\"column.pinned\"\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n      #th\n      [style.width]=\"getColumnWidth(column)\"\n      (mousedown)=\"onMouseDown($event, th)\"\n      (mouseup)=\"onMouseUp($event)\"\n      (mousemove)=\"onMouseMove($event)\"\n    >\n      <div\n        (click)=\"orderBy(column)\"\n        style=\"display: inline\"\n        [class.pointer]=\"isOrderEnabled(column)\"\n      >\n        <div class=\"ngx-table__header-title\">\n          {{ column.title }}<span>&nbsp;</span>\n          <em class=\"ngx-icon ngx-icon-pin\" *ngIf=\"column.pinned\"></em>\n          <div [style.display]=\"config.orderEnabled ? 'inline' : 'none'\">\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\"\n              class=\"ngx-icon ngx-icon-arrow-up\"\n            >\n            </em>\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\"\n              class=\"ngx-icon ngx-icon-arrow-down\"\n            >\n            </em>\n          </div>\n        </div>\n      </div>\n      <div class=\"ngx-dropdown\" *ngIf=\"!!column.headerActionTemplate\" #headerDropdown>\n        <a class=\"ngx-btn ngx-btn-link\" (click)=\"showHeaderActionTemplateMenu(column)\">\n          <span class=\"ngx-icon ngx-icon-more\"></span>\n        </a>\n        <div\n          class=\"ngx-menu ngx-table__table-menu\"\n          *ngIf=\"column.key === openedHeaderActionTemplate\"\n        >\n          <ng-container [ngTemplateOutlet]=\"column.headerActionTemplate\"> </ng-container>\n        </div>\n      </div>\n      <div class=\"ngx-table__column-resizer\" *ngIf=\"config.resizeColumn && !last\"></div>\n    </th>\n  </ng-container>\n  <th\n    *ngIf=\"\n      config.additionalActions ||\n      config.detailsTemplate ||\n      config.collapseAllRows ||\n      config.groupRows\n    \"\n    class=\"ngx-table__header-cell-additional-actions\"\n  >\n    <div class=\"ngx-dropdown\" #additionalActionMenu *ngIf=\"config.additionalActions\">\n      <a class=\"ngx-btn ngx-btn-link\" (click)=\"showMenu()\">\n        <span class=\"ngx-icon ngx-icon-menu\"></span>\n      </a>\n      <ul class=\"ngx-menu ngx-table__table-menu\" *ngIf=\"menuActive\">\n        <ng-container\n          *ngIf=\"additionalActionsTemplate\"\n          [ngTemplateOutlet]=\"additionalActionsTemplate\"\n        >\n        </ng-container>\n      </ul>\n    </div>\n  </th>\n</tr>\n<tr\n  class=\"ngx-table__header ngx-table__header--draggable\"\n  *ngIf=\"config.headerEnabled && config.columnReorder\"\n  cdkDropList\n  cdkDropListOrientation=\"horizontal\"\n  (cdkDropListDropped)=\"columnDrop($event)\"\n>\n  <th *ngIf=\"config.checkboxes || config.radio\" [style.width]=\"'3%'\">\n    <ng-container\n      *ngIf=\"selectAllTemplate && config.checkboxes\"\n      [ngTemplateOutlet]=\"selectAllTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: onSelectAllBinded }\"\n    >\n    </ng-container>\n    <label\n      class=\"ngx-form-checkbox\"\n      for=\"selectAllCheckboxes\"\n      *ngIf=\"!selectAllTemplate && config.checkboxes\"\n    >\n      <input type=\"checkbox\" id=\"selectAllCheckboxesDrag\" (change)=\"onSelectAll()\" />\n      <em class=\"ngx-form-icon\" id=\"selectAllCheckboxDrag\"></em>\n    </label>\n  </th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index; let last = last\">\n    <th\n      class=\"ngx-table__header-cell ngx-table__header-cell--draggable\"\n      cdkDragLockAxis=\"x\"\n      cdkDrag\n      [cdkDragStartDelay]=\"config.reorderDelay || 0\"\n      [class.pinned-left]=\"column.pinned\"\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n      #th\n      [style.width]=\"getColumnWidth(column)\"\n      (mousedown)=\"onMouseDown($event, th)\"\n      (mouseup)=\"onMouseUp($event)\"\n      (mousemove)=\"onMouseMove($event)\"\n    >\n      <div\n        (click)=\"orderBy(column)\"\n        style=\"display: inline\"\n        cdkDragHandle\n        [class.pointer]=\"isOrderEnabled(column)\"\n      >\n        <div class=\"ngx-table__header-title\">\n          {{ column.title }}<span>&nbsp;</span>\n          <em class=\"ngx-icon ngx-icon-pin\" *ngIf=\"column.pinned\"></em>\n          <div [style.display]=\"config.orderEnabled ? 'inline' : 'none'\">\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\"\n              class=\"ngx-icon ngx-icon-arrow-up\"\n            >\n            </em>\n            <em\n              *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\"\n              class=\"ngx-icon ngx-icon-arrow-down\"\n            >\n            </em>\n          </div>\n        </div>\n      </div>\n      <div class=\"ngx-dropdown\" *ngIf=\"!!column.headerActionTemplate\" #headerDropdown>\n        <a class=\"ngx-btn ngx-btn-link\" (click)=\"showHeaderActionTemplateMenu(column)\">\n          <span class=\"ngx-icon ngx-icon-more\"></span>\n        </a>\n        <div\n          class=\"ngx-menu ngx-table__table-menu\"\n          *ngIf=\"column.key === openedHeaderActionTemplate\"\n        >\n          <ng-container [ngTemplateOutlet]=\"column.headerActionTemplate\"> </ng-container>\n        </div>\n      </div>\n      <div class=\"ngx-table__column-resizer\" *ngIf=\"config.resizeColumn && !last\"></div>\n    </th>\n  </ng-container>\n  <th\n    *ngIf=\"\n      config.additionalActions ||\n      config.detailsTemplate ||\n      config.collapseAllRows ||\n      config.groupRows\n    \"\n    class=\"ngx-table__header-cell-additional-actions\"\n  >\n    <div class=\"ngx-dropdown\" #additionalActionMenu *ngIf=\"config.additionalActions\">\n      <a class=\"ngx-btn ngx-btn-link\" (click)=\"showMenu()\">\n        <span class=\"ngx-icon ngx-icon-menu\"></span>\n      </a>\n      <ul class=\"ngx-menu ngx-table__table-menu\" *ngIf=\"menuActive\">\n        <ng-container\n          *ngIf=\"additionalActionsTemplate\"\n          [ngTemplateOutlet]=\"additionalActionsTemplate\"\n        >\n        </ng-container>\n      </ul>\n    </div>\n  </th>\n</tr>\n<tr\n  [style.display]=\"config.searchEnabled && !filtersTemplate ? 'table-row' : 'none'\"\n  class=\"ngx-table__search-header\"\n>\n  <th *ngIf=\"config.checkboxes || config.radio\"></th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n    <th\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [class.pinned-left]=\"column.pinned\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n    >\n      <table-header\n        *ngIf=\"getColumnDefinition(column)\"\n        (update)=\"onSearch($event)\"\n        [column]=\"column\"\n      >\n      </table-header>\n    </th>\n  </ng-container>\n  <th *ngIf=\"config.additionalActions || config.detailsTemplate\"></th>\n</tr>\n<ng-container *ngIf=\"filtersTemplate\">\n  <tr>\n    <ng-container [ngTemplateOutlet]=\"filtersTemplate\"> </ng-container>\n  </tr>\n</ng-container>\n", styles: [".cdk-drag-preview{text-align:left;padding-top:9px;padding-left:4px;color:#50596c;border:1px solid #e7e9ed}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.StyleService }]; }, propDecorators: { config: [{
                type: Input
            }], columns: [{
                type: Input
            }], sortKey: [{
                type: Input
            }], sortState: [{
                type: Input
            }], selectAllTemplate: [{
                type: Input
            }], filtersTemplate: [{
                type: Input
            }], additionalActionsTemplate: [{
                type: Input
            }], filter: [{
                type: Output
            }], order: [{
                type: Output
            }], selectAll: [{
                type: Output
            }], event: [{
                type: Output
            }], th: [{
                type: ViewChild,
                args: ['th']
            }], headerDropdown: [{
                type: ViewChildren,
                args: ['headerDropdown']
            }], additionalActionMenu: [{
                type: ViewChild,
                args: ['additionalActionMenu']
            }], onClick: [{
                type: HostListener,
                args: ['document:click', ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,